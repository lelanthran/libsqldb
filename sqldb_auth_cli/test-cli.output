removed 'sqldb_auth.sql3'
sqldb_auth: A command-line program to manage user, groups and permissions
using the sqldb_auth module.

-----
USAGE
-----
     sqldb_auth help <command>
     sqldb_auth [options] <command>
     sqldb_auth <command> [options]

The first form of usage displays the builtin help on the specified command.
The second and third forms of usage are identical in behaviour and serve to
show that commands and options may be interspersed.

Options are of the form of  '--name=value' while commands and command
arguments are positional.


-------
OPTIONS
-------
 --help
     Print this message, then exit.

 --verbose
     Be verbose in the messages printed to screen. By default only errors
     and some informational messages are printed.

 --database-type=<sqlite | postgres>
     Database type. When database-type is 'sqlite' then '--database' is
     used to determine the filename of the sqlite3 database file. When
     database-type is 'postgres' then '--database' must contain the full
     connection string for a postgres database.
     Defaults to 'sqlite'.

 --database=<connection>
     Specifies the database to connect to. When '--database-type' is 'sqlite'
     then '--database' specifies a sqlite3 file. When '--database-type' is
     'postgres' then '--database' must contain a postgres connection string.
     Defaults to 'sqldb_auth.sql3,

 --display-bits=<binary | hex | oct | dec>
     Specifies the format to display permission or flag bits in. Defaults to
     binary.


----------------
GENERAL COMMANDS
----------------
  help <command>
     Provide the help message for the specified command <command>.

  create 
     Creates a new, empty sqlite database. This is only needed for sqlite.
     When using a postgres database, the database must be created by the
     caller.

  init <database-type> <database>
     Initialises a database with the necessary tables. The <database-type>
     must be one of 'sqlite' or 'postgres'. When the <database-type> is
     'sqlite' the <database> argument refers to a filename for the sqlite
     database. When the <database-type> is 'postgres' the <database> 
     argument must contain the postgres connection string.



----------------
SESSION COMMANDS
----------------
  session_authenticate <email> <password>
     Authenticates the user specified with <email> using the specified
     password <password>.
     Prints the session ID token and other user infomation to stdout on
     success, or an error msg (with no stdout output) on error. Returns
     non-zero on failure to authenticate the user, and zero on successful
     authentication. Any existing session is invalidated on a successful
     authentication only.

  session_invalidate <email> <session-ID>
     Invalidates the user specified with <email> if and only if the
     specified <session-ID> is valid for that user. Prints either 'true'
     and returns 0 if the session-id and email combination was found in the
     database, or prints 'false' and returns non-zero if the session-id and
     email combination was not found in the database.

  session_valid <email> <session-ID>
     Checks if the session specified by <session-ID> is valid for the user
     specified by <email>. If valid, prints 'true' to stdout and returns
     zero to the caller. If not valid, prints 'false' to stdout and
     returns non-zero to the caller.



-------------
USER COMMANDS
-------------
  user_create <email> <nick> <password> 
     Create a new user, using specified <email>, <nick> and <password>.

  user_rm <email> 
     Delete the user with the specified <email>.

  user_mod <email> <new-email> <new-nick> <new-password>
     Modify the user record specified with <email>, setting the new email,
     nick and password.

  user_info <email> 
     Display all the user info for the record specified with <email>.

  user_find <email-pattern> <nick-pattern>
     Find users matching either the <email-pattern> or <nick-pattern>. The
     pattern must match the rules for 'SQL LIKE' globbing patterns:
        %: Matches zero or more wildcard characters
        _: Matches a single wildcard character

  user_flags_set <email>  <bit-number [ | bit-number | ...]>
     Set a flag for the user specified by <email>. Up to 64 flags can be
     set or cleared per user.

  user_flags_clear <email> <bit-number [ | bit-number | ...]>
     Clear a flag for the user specified by <email>. Up to 64 flags can be
     set or cleared per user.

  user_perms <email> <resource>
     Display the permission bits of the user specified with <email> for the
     resource specified with <resource>. Only the actual permissions of the
     user is displayed; permissions inherited from group membership will not
     be displayed.
     To display the effective permissions of a user use the 'perms' command
     below.
     See '--display-bits' for display options.



--------------
GROUP COMMANDS
--------------
  group_create <name> <description> 
     Create a new group, using specified <name> and <description>.

  group_rm <name> 
     Delete the group with the specified <name>.

  group_mod <name> <new-name> <new-description>
     Modify the group record specified with <name>, setting the new name,
     and description.

  group_info <name>
     Display all the group info for the record specified with <name>.

  group_find <name-pattern> <description-pattern>
     Find groups matching either the <name-pattern> or <description-pattern>.
     The pattern must match the rules for 'SQL LIKE' globbing patterns:
        %: Matches zero or more wildcard characters
        _: Matches a single wildcard character

  group_perms <name> <resource>
     Display the permission bits of the group specified with <name> for the
     resource specified with <resource>.
     See '--display-bits' for display options.



-------------------------
GROUP MEMBERSHIP COMMANDS
-------------------------
  group_adduser <name> <email>
     Add the user specified by <email> to the group specified by <name>.

  group_rmuser <name> <email>
     Remove the user specified by <email> from the group specified by <name>.

  group_members <name>
     List all the users in the group specified by <name>.



-------------------
PERMISSION COMMANDS
-------------------
  grant_user <email> <resource> <bit-number [ | bit-number | ...]>
     Allow user specified by <email> access to the resource specified by
     <resource>. The nature of the access is specified by one or more
     <bit-number> specifiers.

  revoke_user <email> <resource> <bit-number [ | bit-number | ...]>
     Revoke access to the resource specified by <resource> for user specified
     by <email>. The nature of the access is specified by one or more
     <bit-number> specifiers.

  grant_group <name> <resource> <bit-number [ | bit-number | ...]>
     Allow group specified by <name> access to the resource specified by
     <resource>. The nature of the access is specified by one or more
     <bit-number> specifiers.

  revoke_group <name> <resource> <bit-number [ | bit-number | ...]>
     Revoke access to the resource specified by <resource> for group
     specified by <email>. The nature of the access is specified by one
     or more <bit-number> specifiers.

  perms <email> <resource>
     Display the *EFFECTIVE* permission bits of the user specified with
     <email> for the resource specified with <resource>. The effective
     permissions include all the permissions inherited from group
     membership.
     See '--display-bits' for display options.



Creating empty sqlite database [sqldb_auth.sql3]
Created empty sqlite database [sqldb_auth.sql3]
Initialising [sqlite] database on [sqldb_auth.sql3]
Initialised [sqlite] database [sqldb_auth.sql3] for use with sqldb_auth.
--------------------------
User:    [four@example.com]
ID:      [4]
Flags:   [10]
Nick:    [FOUR-USER]
Session: []
--------------------------
--------------------------
User:    [five@example.com]
ID:      [5]
Flags:   [10]
Nick:    [FIVE-USER]
Session: []
--------------------------
--------------------------
User:    [six@example.com]
ID:      [6]
Flags:   [10]
Nick:    [SIX-USER]
Session: []
--------------------------
Matches [f%][]
4:10:four@example.com:FOUR-USER
5:10:five@example.com:FIVE-USER
..........................
Matches [][t%]
2:10:two@example.com:TWO-USER
3:10:three@example.com:THREE-USER
10:10:ten@example.com:TEN-USER
..........................
Matches [t%][f%]
2:10:two@example.com:TWO-USER
3:10:three@example.com:THREE-USER
4:10:four@example.com:FOUR-USER
5:10:five@example.com:FIVE-USER
10:10:ten@example.com:TEN-USER
..........................
--------------------------
Group:    [Group-One]
ID:       [1]
Descr:    [Group One Description]
--------------------------
--------------------------
Group:    [Group-Two]
ID:       [2]
Descr:    [Group Two Description]
--------------------------
--------------------------
Group:    [Group-Four]
ID:       [4]
Descr:    [Group Four Description]
--------------------------
Matches [group-t%][]
2:Group-Two:Group Two Description
3:Group-Three:Group Three Description
10:Group-Ten:Group Ten Description
..........................
Matches [][group f%]
4:Group-Four:Group Four Description
5:Group-Five:Group Five Description
..........................
Matches [group-t%][group f%]
2:Group-Two:Group Two Description
3:Group-Three:Group Three Description
4:Group-Four:Group Four Description
5:Group-Five:Group Five Description
10:Group-Ten:Group Ten Description
..........................
Membership of [Group-One]
1:10:one@example.com:ONE-USER
2:10:two@example.com:TWO-USER
4:10:four@example.com:FOUR-USER
6:10:six@example.com:SIX-USER
10:10:ten@example.com:TEN-USER
..........................
Perms for resource [one@example.com] user [Resource-1]: 0000000000000000000000000000000000000000000000000000000000010101
21
Perms for resource [Group-One] group [Resource-1]: 0000000000000000000000000000000000000000000000000000000000001011
Effective perms for resource [one@example.com] user [Resource-1]: 0000000000000000000000000000000000000000000000000000000000011111
false
Using session b19cb5a089ad878638eba8d7f22baff12a5f5436bf0864eeba48d12490ff6e42
true:ONE-USER:10:1
true
false
